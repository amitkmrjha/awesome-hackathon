services:
  flyway-asset-svc:
    image: flyway/flyway:10.18.0
    #command: -configFiles=/flyway/conf/flyway.conf -locations=filesystem:/flyway/sql -postgresql.transactional.lock=false -connectRetries=60 migrate -X
    command: -configFiles=/flyway/conf/flyway.conf -locations=filesystem:/flyway/sql -postgresql.transactional.lock=false -connectRetries=60 migrate
    volumes:
      - ../ddl_scripts/nft-asset:/flyway/sql
      - ./flyway/docker-flyway-awesome-hackathon.conf:/flyway/conf/flyway.conf
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres:16.4
    volumes:
      - ../docker/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-awesome_hackathon}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-awesome_hackathon}
      POSTGRES_DB: ${POSTGRES_DB:-awesome_hackathon}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    restart: always
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.7.1
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  awesome-migration-svc:
    container_name: awesome-migration-svc
    mem_limit: 1.5g
    build:
      context: .
      dockerfile: awesome-hackathon/Dockerfile
      target: base
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    environment:
      - "LOG_PRETTY_PRINT=true"
      - "AKKA_MANAGEMENT_HTTP_HOST=127.0.0.1"
    volumes:
      - ../awesome-hackathon-svc/.scalafmt.conf:/app/.scalafmt.conf
      - ../awesome-hackathon-svc/build.sbt:/app/build.sbt
      - ../awesome-hackathon-svc/project/build.properties:/app/project/build.properties
      - ../awesome-hackathon-svc/project/plugins.sbt:/app/project/plugins.sbt
      - ../awesome-hackathon-svc/src/:/app/src/
      # Faster cold startups by caching sbt, libraries and target folders
      - migration-ivy2-cache:/home/bynder/.ivy2
      - migration-sbt-cache:/home/bynder/.sbt
      - migration-target-cache:/app/target
    ports:
      - "3000:9001"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint:
      - sh
      - -c
      - |
        sbt ~reStart
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8558/ready" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 40s

  volumes:
    migration-ivy2-cache:
    migration-sbt-cache:
    migration-target-cache:
